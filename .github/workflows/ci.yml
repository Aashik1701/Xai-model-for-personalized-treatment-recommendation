name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build-test:
    name: Lint, Type Check, Test, Validate Data
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          # Extra security tooling (lightweight)
          pip install bandit pip-audit

      - name: Black (format check)
        run: black --check .

      - name: Flake8 (lint)
        run: flake8 src scripts tests

      - name: Mypy (type check)
        run: mypy src

      - name: Run tests (pytest)
        run: pytest -v --cov=src --cov-report=term --cov-report=xml

      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: warn

      - name: Dataset validation
        run: |
          python scripts/validate_datasets.py --json > dataset_validation.json || echo "validator_failed=1" >> $GITHUB_ENV

      - name: Upload dataset validation report
        uses: actions/upload-artifact@v4
        with:
          name: dataset-validation
          path: dataset_validation.json
          if-no-files-found: warn

      - name: Bandit (security scan)
        run: bandit -q -r src || echo "bandit_failed=1" >> $GITHUB_ENV

      - name: pip-audit (dependency vulnerabilities)
        run: pip-audit -r requirements.txt || echo "pip_audit_failed=1" >> $GITHUB_ENV

      - name: Summarize Quality Gates
        run: |
          echo "## Quality Gate Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Black: passed" >> $GITHUB_STEP_SUMMARY
          echo "- Flake8: passed" >> $GITHUB_STEP_SUMMARY
          echo "- Mypy: passed" >> $GITHUB_STEP_SUMMARY
          echo "- Pytest: passed" >> $GITHUB_STEP_SUMMARY
          if [ -f dataset_validation.json ]; then
            echo "- Dataset Validation: generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Dataset Validation: missing (script failure)" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${bandit_failed:-0}" = "1" ]; then
            echo "- Bandit: issues detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Bandit: completed" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${pip_audit_failed:-0}" = "1" ]; then
            echo "- pip-audit: vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "- pip-audit: completed" >> $GITHUB_STEP_SUMMARY
          fi

  # Future: add a separate job for building & pushing Docker images, triggered only on tags.
